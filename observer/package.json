{
  "name": "observer-pattern",
  "version": "1.0.0",
  "description": "The observer pattern is a one-to-many dependency between objects so that when one object changes state, all of its dependents are notified and updated automatically.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "build": "tsc",
    "start": "npm run build && node build/index.js",
    "start:dev": "nodemon",
    "lint": "eslint . --ext .ts",
    "prettier-format": "prettier --config .prettierrc 'src/**/*.ts' --write"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/node": "^18.8.3",
    "@typescript-eslint/eslint-plugin": "^5.39.0",
    "@typescript-eslint/parser": "^5.39.0",
    "eslint": "^8.25.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-prettier": "^4.2.1",
    "nodemon": "^2.0.20",
    "prettier": "^2.7.1",
    "ts-node": "^10.9.1"
  },
  "dependencies": {
    "eslint-config-airbnb-base": "^15.0.0"
  }
}
